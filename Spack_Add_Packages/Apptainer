Bootstrap: localimage
# Cached apptainer-al9 image
From: ../AlmaLinux9_Apptainer/almalinux9_apptainer.sif
Stage: build

%help
    This build file adds all the components needed to add 
    new packages to Spack. Obviously we need to add our 
    Spack fork. Then, of course, we can also use that
    instance of Spack to install most tools we need.
    Git is the obvious exception as we need that to clone
    Spack.

# The following is not needed if we mount the home directory
# because then we can ssh-add our credentials with the
# absolute filename of our private key on the host machine.
#%files
#    # We need SSH for authentication to push changes
#    {{ home }}/.ssh/config ~/.ssh/config
#    {{ home }}/.ssh/id_rsa ~/.ssh/id_rsa

%post -c /bin/bash
    dnf install -y git
    dnf install -y gcc
    dnf install -y gcc-c++
    dnf install -y gcc-gfortran
    dnf install -y patch
    dnf install -y tar
    dnf install -y gzip unzip bzip2 xz
    dnf install -y file
    dnf install -y lsb-release
    dnf install -y gnupg2
    dnf install -y procps
    dnf install -y mpich
    dnf install -y openssl
    dnf install -y findutils
    cd $HOME
    # Here life gets interesting. As we cannot push code to github from within
    # a running Apptainer the Spack sources we want to change need to live in
    # folder on the host. During building an Apptainer the external mounted
    # filesystems are not accessible. Therefore I cannot use the host spack 
    # version to set Spack related stuff up in the container. Hence
    # I need to install Spack in the container for building the container.
    # But I need to switch to the host Spack installation when running the 
    # container.
    git clone --depth=10 https://github.com/hjjvandam/spack.git -b develop
    . /root/spack/share/spack/setup-env.sh
    spack install environment-modules
    cat <<EOF > $HOME/.spack/modules.yaml
    modules:
      default:
        enable:
          - tcl
        tcl:
          hide_implicits: true
          all:
            autoload: direct
EOF
    # When the container is created you are root,
    # but when the container is run you are an unprivileged user
    # with a username that depends on your host username.
    # So we need to add settings in a way such that any user
    # picks automatically picks them up. Putting the settings
    # in /etc/bashrc seems the best option.
    cat <<EOF >> /etc/bashrc
    # Spack in /root knows where environment-modules is installed.
    # With it we initialize the modules setup
    # then we initialize the Spack setup we want use but with the
    # modules initialized it should pickup the modules installation
    # properly.
    . /root/spack/share/spack/setup-env.sh
    . $(spack location -i environment-modules)/init/bash
    . {{ home }}/Documents/spack/share/spack/setup-env.sh
    alias vi="vim"
    export EDITOR="/usr/bin/vim"
    export VISUAL="/usr/bin/vim"
EOF
    . $(spack location -i environment-modules)/init/bash
    . /root/spack/share/spack/setup-env.sh
    #. /Users/hubertusvandam/Documents/spack/share/spack/setup-env.sh
    #spack install mpich # install fails: Error: TypeError: expected str, bytes or os.PathLike object, not tuple
    spack install cmake

